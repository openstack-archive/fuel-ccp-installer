---
- name: Install kpm via pip
  command: pip install kpm
  run_once: true

- name: Ensure pool range is correct for hardcoded kubedns definition
  assert: "{{ kube_service_addresses }}" == "10.233.0.0/18"

# FIXME(mattymo): Shift to templated pods or revert to using KPM
- name: Copy kubedns rc
  copy:
    src: kubedns-rc.yml
    dest: /etc/kubernetes/kubedns-rc.yml
    owner: root
    group: root
    mode: 0644
  register: kubedns_rc

- name: Copy kubedns svc
  copy:
    src: kubedns-svc.yml
    dest: /etc/kubernetes/kubedns-svc.yml
    owner: root
    group: root
    mode: 0644
  register: kubedns_svc

- name: Deploy kubedns rc
  command: "{{ bin_dir }}/kubelet replace -f /etc/kubernetets/kubedns-rc.yml"
  when: kubedns_rc.changed

- name: Deploy kubedns svc
  command: "{{ bin_dir }}/kubelet replace -f /etc/kubernetets/kubedns-svc.yml"
  when: kubedns_svc.changed

- name: Wait for kubedns to be ready
  uri: url=https://kube:{{kube_api_pwd}}@kubernetes validate_certs=no
  register: kubedns_ready
  until: kubedns_ready.status == 200 or kubedns_ready.status == 401
  delay: 30
  retries: 15

- name: Copy network test script
  copy:
    src: test_networking.sh
    dest: "{{ bin_dir }}/test_networking.sh"
    owner: root
    group: root
    mode: 0755

- name: Ensure dnsutils is installed
  apt:
    name: dnsutils
    state: latest
  when: ansible_os_family == "Debian"

- name: Test networking connectivity
  shell: "bash {{ bin_dir }}/test_networking.sh"
  changed_when: false
  become: no

- name: Copy dashboard definition
  copy:
    src: kubernetes-dashboard.yml
    dest: /etc/kubernetes/kubernetes-dashboard.yml
    owner: root
    group: root
    mode: 0644
  register: dashboard

- name: Create Kubernetes dashboard
  command: "{{ bin_dir }}/kubectl create -f /etc/kubernetes/kubernetes-dashboard.yml"
  when: dashboard.changed
